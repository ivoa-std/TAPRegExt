<?xml version="1.0"?>
<capability 
  xmlns:tr="http://www.ivoa.net/xml/TAPRegExt/v1.0" 
  xmlns:vr="http://www.ivoa.net/xml/VOResource/v1.0" 
  xmlns:vs="http://www.ivoa.net/xml/VODataService/v1.1" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  standardID="ivo://ivoa.net/std/TAP"  
  xsi:type="tr:TableAccess">
  <interface role="std" 
  xsi:type="vs:ParamHTTP">
    <accessURL use="base">http://localhost:8080/__system__/tap/run/tap</accessURL>
  </interface>
  <dataModel ivo-id="ivo://ivoa.net/std/ObsCore/v1.0">ObsCore 1.0</dataModel>
  <language>
    <name>ADQL</name>
    <version ivo-id="ivo://ivoa.net/std/ADQL#v2.0">2.0</version>
    <description>ADQL 2.0</description>
    <languageFeatures type="ivo://ivoa.net/std/TAPRegExt#features-udf">
      <feature>
        <form>ivo_nocasematch(value TEXT, pattern TEXT) -&gt; INTEGER</form>
        <description>ivo_nocasematch returns 1 if pattern matches value, 0 otherwise.
pattern is defined as for the SQL LIKE operator, but the
match is performed case-insensitively.  This function in effect
provides a surrogate for the ILIKE SQL operator that is missing from
ADQL.</description>
      </feature>
      <feature>
        <form>ivo_hashlist_has(hashlist TEXT, item TEXT) -&gt; INTEGER</form>
        <description>The function takes two strings; the first is a list of words not
containing the hash sign (#), concatenated by hash signs, the second is
a word not containing the hash sign.  It returns 1 if, compared
case-insensitively, the second argument is in the list of words coded in
the first argument.  The behaviour in case the the second
argument contains a hash sign is unspecified.</description>
      </feature>
      <feature>
        <form>gavo_match(pattern TEXT, string TEXT) -&gt; INTEGER</form>
        <description>gavo_match returns 1 if the POSIX regular expression pattern
matches anything in string, 0 otherwise.</description>
      </feature>
      <feature>
        <form>ivo_hasword(haystack TEXT, needle TEXT) -&gt; INTEGER</form>
        <description>gavo_hasword returns 1 if needle shows up in haystack, 0 otherwise.  This
is for "google-like"-searches in text-like fields.  In word, you can
actually employ a fairly complex query language; see
http://www.postgresql.org/docs/8.3/static/textsearch.html
for details.</description>
      </feature>
    </languageFeatures>
    <languageFeatures type="ivo://ivoa.net/std/TAPRegExt#features-adqlgeo">
      <feature>
        <form>BOX</form>
      </feature>
      <feature>
        <form>POINT</form>
      </feature>
      <feature>
        <form>CIRCLE</form>
      </feature>
      <feature>
        <form>POLYGON</form>
      </feature>
      <feature>
        <form>REGION</form>
      </feature>
      <feature>
        <form>CENTROID</form>
      </feature>
      <feature>
        <form>COORD1</form>
      </feature>
      <feature>
        <form>COORD2</form>
      </feature>
      <feature>
        <form>DISTANCE</form>
      </feature>
      <feature>
        <form>CONTAINS</form>
      </feature>
      <feature>
        <form>INTERSECTS</form>
      </feature>
      <feature>
        <form>AREA</form>
      </feature>
    </languageFeatures>
  </language>
  <outputFormat ivo-id="ivo://ivoa.net/std/TAPRegExt#output-votable-binary">
    <mime>text/xml</mime>
  </outputFormat>
  <outputFormat ivo-id="ivo://ivoa.net/std/TAPRegEXT#output-votable-td">
    <mime>application/x-votable+xml;encoding=tabledata</mime>
    <alias>votable/td</alias>
  </outputFormat>
  <outputFormat>
    <mime>text/html</mime>
    <alias>html</alias>
  </outputFormat>
  <outputFormat>
    <mime>application/fits</mime>
    <alias>fits</alias>
  </outputFormat>
  <outputFormat>
    <mime>text/csv</mime>
  </outputFormat>
  <outputFormat>
    <mime>text/csv;header=present</mime>
    <alias>csv</alias>
  </outputFormat>
  <outputFormat>
    <mime>text/tab-separated-values</mime>
    <alias>tsv</alias>
  </outputFormat>
  <outputFormat ivo-id="ivo://ivoa.net/std/TAPRegExt#output-votable-binary">
    <mime>application/x-votable+xml</mime>
    <alias>votable</alias>
  </outputFormat>
  <outputFormat>
    <mime>text/plain</mime>
  </outputFormat>
  <uploadMethod ivo-id="ivo://ivoa.net/std/TAPRegExt#upload-https"/>
  <uploadMethod ivo-id="ivo://ivoa.net/std/TAPRegExt#upload-ftp"/>
  <uploadMethod ivo-id="ivo://ivoa.net/std/TAPRegExt#upload-inline"/>
  <uploadMethod ivo-id="ivo://ivoa.net/std/TAPRegExt#upload-http"/>
  <retentionPeriod>
    <default>172800</default>
  </retentionPeriod>
  <executionDuration>
    <default>3600</default>
  </executionDuration>
  <outputLimit>
    <default unit="row">2000</default>
    <hard unit="row">20000000</hard>
  </outputLimit>
  <uploadLimit>
    <hard unit="byte">20000000</hard>
  </uploadLimit>
</capability>
